<div class="chore-menu">
  <h2 class="my-chores-heading">My Chores</h2>
  <.form :let={f} for={%{}} as={:filter_chores} phx-change="filter_form_changed">
    <div class="chore-form-flexbox">
      <%= text_input f, :filter_string, value: @filter_string, class: "chore-form-select", placeholder: "Filter chores" %>
    </div>
  </.form>
  <.form :let={f} for={%{}} as={:run_chore} phx-submit="run_chore" phx-change="form_changed">
    <div class="chore-form-flexbox">
      <%= select f, :chore, @form_chores, prompt: [key: "Choose your chore"], selected: @chore_name, class: "chore-form-select", promt: "Select a Chore" %>
      <%= if @currently_selected_chore do %>
        <div class="chore-inputs-container">
          <div class="chore-form-inputs-flexbox">
            <.inputs_for :let={ff} field={f[:chore_attrs]}>
              <%= for {type, key, opts} <- @inputs do %>
                <%= render(__MODULE__, "chore_inputs.html", Map.merge(assigns, %{type: type, key: key, form: ff, opts: opts})) %>
              <% end %>
            </.inputs_for>
          </div>
          <%= submit "Run Chore", class: "chore-run-submit-button", disabled: not @is_chore_valid %>
        </div>
      <% end %>
    </div>
  </.form>
</div>
<div class="running-chores-container">
  <ul class="running-chores">
    <%= for chore <- @running_chores do %>
    <li class="running-chore" id={chore.id}>
      <.live_component id={"#{chore.id}-items"} module={ChoreItemComponent} chore={chore} download_live_path={@download_live_path} download_plug_path={@download_plug_path}/>
    </li>
    <% end %>
  </ul>
</div>
<.live_component id="chore-modal" module={ChoreModalComponent} chore={@selected_chore} />
